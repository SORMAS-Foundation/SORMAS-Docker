version: '2.3'

services:
  sormas:
    extends:
      file: services-base.yml
      service: base-sormas
    labels:
      - autoheal=true
        # override for stop timeout seconds during restart
      - autoheal.stop.timeout=30
    links:
      - postgres
    environment:
      - DB_JDBC_MAXPOOLSIZE=${DB_JDBC_MAXPOOLSIZE}
      - AUTHENTICATION_PROVIDER=KEYCLOAK
      - KEYCLOAK_SORMAS_UI_SECRET=${KEYCLOAK_SORMAS_UI_SECRET}
      - KEYCLOAK_SORMAS_REST_SECRET=${KEYCLOAK_SORMAS_REST_SECRET}
      - KEYCLOAK_SORMAS_BACKEND_SECRET=${KEYCLOAK_SORMAS_BACKEND_SECRET}
      - CACERTS_PASS=${CACERTS_PASS}
      - KEYSTORE_PASS=${KEYSTORE_PASS}
      - SORMAS2SORMAS_ENABLED=${SORMAS2SORMAS_ENABLED}
      - SORMAS2SORMAS_KEYALIAS=
      - SORMAS2SORMAS_KEYSTORENAME=
      - SORMAS2SORMAS_KEYPASSWORD=
      - SORMAS2SORMAS_TRUSTSTORENAME=
      - SORMAS2SORMAS_TRUSTSTOREPASSWORD=
      - SORMAS2SORMAS_DIR=${SORMAS2SORMAS_DIR}
      - SORMAS_ORG_ID=${SORMAS_ORG_ID}
      - SORMAS_ORG_NAME=${SORMAS_ORG_NAME}
      - SORMAS_HOST_NAME=${SORMAS_SERVER_URL}
      - SORMAS_HTTPS_PORT=443
      - NAMESIMILARITYTHRESHOLD=${NAMESIMILARITYTHRESHOLD}
      - DEMIS_ENABLED=${DEMIS_ENABLED}
    volumes:
      - ${SORMAS_PATH}/documents:/opt/sormas/documents
      - ${SORMAS_PATH}/custom:/opt/sormas/custom
      - ${SORMAS_PATH}/sormas-logs:/opt/domains/sormas/logs
      - ./apache2/certs:/tmp/certs
      - ${SORMAS_PATH}/demis:/tmp/${DOMAIN_NAME}/config/demis
    healthcheck:
      test: ["CMD", "curl", "-f", "-I", "http://localhost:6048"]
      interval: 30s
      timeout: 7s
      retries: 3
      start_period: 300s
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_healthy

  keycloak:
    links:
      - keycloak-postgres
    extends:
      file: services-base.yml
      service: base-keycloak
    depends_on:
      keycloak-postgres:
        condition: service_healthy

  postgres:
    extends:
      file: services-base.yml
      service: base-postgres
    volumes:
      - ${SORMAS_PATH}/psqldata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  keycloak-postgres:
    extends:
      file: services-base.yml
      service: base-keycloak-postgres
    volumes:
      - ${SORMAS_PATH}/keycloak/psqldata:/var/lib/postgresql/data
    ports:
      - 5433:5432
    expose:
      - 5432

  pg_dump:
    extends:
      file: services-base.yml
      service: base-pg_dump
    environment:
      - DB_HOST=${DB_HOST}
      - PGPASSWORD=${SORMAS_POSTGRES_PASSWORD}
      - POSTGRES_USER=${SORMAS_POSTGRES_USER}
      - BACKUP_FILES=${BACKUP_FILES}
      - BACKUP_PATH=${SORMAS_PATH}
      - MIN=15,45 # Twice the hour on 15 and 45 (use crontab notation)
      - HOUR= # Keep empty for every hour. Use crontab notation otherwise
      - KEEP=1 # keep db dumps for one day in backup folder
    volumes:
      - /backup:/var/opt/db_dumps
      - ${SORMAS_PATH}:${SORMAS_PATH}
    depends_on:
      postgres:
        condition: service_healthy

  pg_dump_keycloak:
    extends:
      file: services-base.yml
      service: base-pg_dump
    environment:
      - DB_HOST=${KEYCLOAK_DB_HOST}
      - PGPASSWORD=${KEYCLOAK_DB_PASSWORD}
      - POSTGRES_USER=${KEYCLOAK_DB_USER}
      - MIN=0 # At 0 Minutes
      - HOUR=*/4 # Every 4 hours
      - KEEP=1 # keep db dumps for one day in backup folder
      - BACKUP_FILES=
    volumes:
      - /backup-keycloak:/var/opt/db_dumps
    depends_on:
      keycloak-postgres:
        condition: service_healthy

  apache2:
    extends:
      file: services-base.yml
      service: base-apache2
    links:
      - sormas
      - keycloak
    environment:
      - PROMETHEUS_SERVERS=${PROMETHEUS_SERVERS}
    volumes:
      - ./apache2/certs:/usr/local/apache2/certs
      - ${SORMAS_PATH}/apache2_log:/var/log/apache2
    ports:
      - 443:443
      - 80:80
    depends_on:
      sormas:
        condition: service_healthy

  autoheal:
    extends:
      file: services-base.yml
      service: base-autoheal
    environment:
        # wait 0 seconds before first health check
      - AUTOHEAL_START_PERIOD=0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  sormas-angular:
    restart: unless-stopped
    image: registry.netzlink.com/sormas/sormas_angular_app:latest
    environment:
      - KEYCLOAK_REALM=${SORMAS_ANGULAR_KEYCLOAK_REALM}
      - KEYCLOAK_CLIENT_ID=${SORMAS_ANGULAR_KEYCLOAK_CLIENT_ID}
      - KEYCLOAK_URL=${SORMAS_SERVER_URL}/keycloak
      - SORMAS_REST_API_URL=${SORMAS_SERVER_URL}/sormas-rest
    depends_on:
      sormas:
        condition: service_healthy
      keycloak:
        condition: service_healthy
