version: '2.3'
services:
  sormas:
    restart: unless-stopped
    labels:
      - autoheal=true
        # override for stop timeout seconds during restart
      - autoheal.stop.timeout=30
    links:
      - postgres
    image: hzibraunschweig/sormas-application:${SORMAS_DOCKER_VERSION}
    environment:
      - SORMAS_POSTGRES_USER=${SORMAS_POSTGRES_USER}
      - SORMAS_POSTGRES_PASSWORD=${SORMAS_POSTGRES_PASSWORD}
      - SORMAS_SERVER_URL=${SORMAS_SERVER_URL}
      - DB_HOST=${DB_HOST}
      - DOMAIN_NAME=${DOMAIN_NAME}
      - DB_JDBC_MAXPOOLSIZE=${DB_JDBC_MAXPOOLSIZE}
      - DB_NAME=${DB_NAME}
      - DB_NAME_AUDIT=${DB_NAME_AUDIT}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_FROM=${MAIL_FROM}
      - SORMAS_VERSION=${SORMAS_VERSION}
      - LOCALE=${LOCALE}
      - EPIDPREFIX=${EPIDPREFIX}
      - SEPARATOR=${SEPARATOR}
      - EMAIL_SENDER_ADDRESS=${EMAIL_SENDER_ADDRESS}
      - EMAIL_SENDER_NAME=${EMAIL_SENDER_NAME}
      - LATITUDE=${LATITUDE}
      - LONGITUDE=${LONGITUDE}
      - MAP_ZOOM=${MAP_ZOOM}
      - TZ=${TZ}
      - JVM_MAX=${APPSERVER_JVM_MAX}
      - GEO_UUID=${GEO_UUID}
      - DEVMODE=${DEVMODE}
      - JSON_LOGGING=${JSON_LOGGING}
      - AUTHENTICATION_PROVIDER=KEYCLOAK
      - KEYCLOAK_SORMAS_UI_SECRET=${KEYCLOAK_SORMAS_UI_SECRET}
      - KEYCLOAK_SORMAS_REST_SECRET=${KEYCLOAK_SORMAS_REST_SECRET}
      - KEYCLOAK_SORMAS_BACKEND_SECRET=${KEYCLOAK_SORMAS_BACKEND_SECRET}
      - CACERTS_PASS=${CACERTS_PASS}
      - KEYSTORE_PASS=${KEYSTORE_PASS}
      - SORMAS2SORMAS_ENABLED=${SORMAS2SORMAS_ENABLED}
      - SORMAS2SORMAS_KEYALIAS=
      - SORMAS2SORMAS_KEYSTORENAME=
      - SORMAS2SORMAS_KEYPASSWORD=
      - SORMAS2SORMAS_TRUSTSTORENAME=
      - SORMAS2SORMAS_TRUSTSTOREPASSWORD=
      - S2S_NON_INTERACTIVE=true
      - SORMAS2SORMAS_DIR=${SORMAS2SORMAS_DIR}
      - SORMAS_ORG_ID=${SORMAS_ORG_ID}
      - SORMAS_ORG_NAME=${SORMAS_ORG_NAME}
      - SORMAS_HOST_NAME=${SORMAS_SERVER_URL}
      - SORMAS_HTTPS_PORT=443
      - SORMAS_S2S_CERT_PASS=${SORMAS_S2S_CERT_PASS}
      - SORMAS_S2S_REST_PASSWORD=${SORMAS_S2S_REST_PASSWORD}
      - GEO_TEMPLATE=${GEO_TEMPLATE}
      - GEO_LONG_TEMPLATE=${GEO_LONG_TEMPLATE}
      - GEO_LAT_TEMPLATE=${GEO_LAT_TEMPLATE}
      - CASEARCHIVEDAYS=${CASEARCHIVEDAYS}
      - EVENTARCHIVEDAYS=${EVENTARCHIVEDAYS}
    volumes:
      - ${SORMAS_PATH}/documents:/opt/sormas/documents
      - ${SORMAS_PATH}/custom:/opt/sormas/custom
      - ${SORMAS_PATH}/sormas-logs:/opt/domains/sormas/logs
      - ./apache2/certs:/tmp/certs
    cpus: ${APPSERVER_CPUS}
    mem_limit: ${APPSERVER_MEM}
    mem_reservation: ${APPSERVER_MEM_RESERVED}
    healthcheck:
      test: ["CMD", "curl", "-f", "-I", "http://localhost:6048"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 300s
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_healthy

  keycloak:
    restart: unless-stopped
    labels:
      - autoheal=true
    links:
      - keycloak-postgres
    image: hzibraunschweig/sormas-keycloak:${SORMAS_DOCKER_VERSION}
    environment:
      - KEYCLOAK_USER=${KEYCLOAK_ADMIN_USER}
      - KEYCLOAK_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - DB_VENDOR=${KEYCLOAK_DB_VENDOR}
      - DB_DATABASE=${KEYCLOAK_DB_NAME}
      - DB_ADDR=${KEYCLOAK_DB_HOST}
      - DB_USER=${KEYCLOAK_DB_USER}
      - DB_PASSWORD=${KEYCLOAK_DB_PASSWORD}
      - PROXY_ADDRESS_FORWARDING=true
      - SORMAS_SERVER_URL=${SORMAS_SERVER_URL}
      - KEYCLOAK_SORMAS_UI_SECRET=${KEYCLOAK_SORMAS_UI_SECRET}
      - KEYCLOAK_SORMAS_REST_SECRET=${KEYCLOAK_SORMAS_REST_SECRET}
      - KEYCLOAK_SORMAS_BACKEND_SECRET=${KEYCLOAK_SORMAS_BACKEND_SECRET}
    cpus: ${KEYCLOAK_CPUS}
    mem_limit: ${KEYCLOAK_MEM}
    mem_reservation: ${KEYCLOAK_MEM_RESERVED}
    healthcheck:
      test: ["CMD", "curl", "-f", "-I", "http://localhost:8080/keycloak/auth/realms/master"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 300s
    depends_on:
      keycloak-postgres:
        condition: service_healthy

  postgres:
    restart: unless-stopped
    labels:
      - autoheal=true
    command: -c 'config_file=/etc/postgresql/postgresql.conf'
    image: hzibraunschweig/sormas-postgres:${SORMAS_DOCKER_VERSION}
    environment:
      - POSTGRES_PASSWORD=${SORMAS_POSTGRES_PASSWORD}
      - DB_NAME=sormas
      - DB_NAME_AUDIT=sormas_audit
      - SORMAS_POSTGRES_PASSWORD=${SORMAS_POSTGRES_PASSWORD}
      - SORMAS_POSTGRES_USER=${SORMAS_POSTGRES_USER}
      - TZ=${TZ}
    volumes:
      - ${SORMAS_PATH}/psqldata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    cpus: ${DB_CPUS}
    mem_limit: ${DB_MEM}
    mem_reservation: ${DB_MEM_RESERVED}
    healthcheck:
      test: ["CMD", "psql", "-U", "${SORMAS_POSTGRES_USER}", "-c", "SELECT 1;", "${DB_NAME}"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 30s

  keycloak-postgres:
    restart: unless-stopped
    labels:
      - autoheal=true
    command: -c 'config_file=/etc/postgresql/postgresql.conf'
    image: hzibraunschweig/keycloak-postgres:${SORMAS_DOCKER_VERSION}
    environment:
      - POSTGRES_PASSWORD=${KEYCLOAK_DB_PASSWORD}
      - POSTGRES_USER=${KEYCLOAK_DB_USER}
      - POSTGRES_DB=${KEYCLOAK_DB_NAME}
      - TZ=${TZ}
    volumes:
      - ${SORMAS_PATH}/keycloak/psqldata:/var/lib/postgresql/data
    ports:
      - 5433:5432
    expose:
      - 5432
    cpus: ${KEYCLOAK_DB_CPUS}
    mem_limit: ${KEYCLOAK_DB_MEM}
    mem_reservation: ${KEYCLOAK_DB_MEM_RESERVED}
    healthcheck:
      test: ["CMD", "psql", "-U", "${KEYCLOAK_DB_USER}", "-c", "SELECT 1;", "${KEYCLOAK_DB_NAME}"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 30s

  pg_dump:
    restart: unless-stopped
    image: hzibraunschweig/sormas-pg-dump:${SORMAS_DOCKER_VERSION}
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=sormas
      - DB_NAME_AUDIT=sormas_audit
      - PGPASSWORD=${SORMAS_POSTGRES_PASSWORD}
      - SORMAS_POSTGRES_USER=${SORMAS_POSTGRES_USER}
      - TZ=${TZ}
      - MIN=15,45 # Twice the hour on 15 and 45 (use crontab notation)
      - HOUR= # Keep empty for every hour. Use crontab notation otherwise
      - KEEP=1 # keep db dumps for one day in backup folder
    volumes:
      - /backup:/var/opt/db_dumps
    cpus: ${DB_DUMP_CPUS}
    mem_limit: ${DB_DUMP_MEM}
    mem_reservation: ${DB_DUMP_MEM_RESERVED}
    depends_on:
      postgres:
        condition: service_healthy

  pg_dump_keycloak:
    restart: unless-stopped
    image: hzibraunschweig/sormas-pg-dump:${SORMAS_DOCKER_VERSION}
    environment:
      - DB_HOST=${KEYCLOAK_DB_HOST}
      - DB_NAME=${KEYCLOAK_DB_NAME}
      - PGPASSWORD=${KEYCLOAK_DB_PASSWORD}
      - SORMAS_POSTGRES_USER=${KEYCLOAK_DB_USER}
      - TZ=${TZ}
      - MIN=0 # At 0 Minutes
      - HOUR=*/4 # Every 4 hours
      - KEEP=1 # keep db dumps for one day in backup folder
    volumes:
      - /backup-keycloak:/var/opt/db_dumps
    cpus: ${DB_DUMP_CPUS}
    mem_limit: ${DB_DUMP_MEM}
    mem_reservation: ${DB_DUMP_MEM_RESERVED}
    depends_on:
      postgres:
        condition: service_healthy

  apache2:
    restart: unless-stopped
    labels:
      - autoheal=true
    links:
      - sormas
      - keycloak
    image: hzibraunschweig/sormas-apache2:${SORMAS_DOCKER_VERSION}
    environment:
      - SORMAS_SERVER_URL=${SORMAS_SERVER_URL}
      - TZ=${TZ}
    volumes:
      - ./apache2/certs:/usr/local/apache2/certs
      - ${SORMAS_PATH}/apache2_log:/var/log/apache2
    ports:
      - 443:443
      - 80:80
    cpus: ${WEBSERVER_CPUS}
    mem_limit: ${WEBSERVER_MEM}
    mem_reservation: ${WEBSERVER_MEM_RESERVED}
    healthcheck:
      test: ["CMD", "curl", "-f", "-I", "-k", "--resolve", "${SORMAS_SERVER_URL}:443:127.0.0.1", "https://${SORMAS_SERVER_URL}/downloads/"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 30s
    depends_on:
      sormas:
        condition: service_healthy

  autoheal:
    restart: unless-stopped
    image: willfarrell/autoheal
    environment:
        # watch all running containers.
      - AUTOHEAL_CONTAINER_LABEL=all
        # check every 10 seconds
      - AUTOHEAL_INTERVAL=10
        # wait 0 seconds before first health check
      - AUTOHEAL_START_PERIOD=0
        # Docker waits max 10 seconds (the Docker default) for a container to stop before killing
      - AUTOHEAL_DEFAULT_STOP_TIMEOUT=10
        # Unix socket for curl requests to Docker API
      - DOCKER_SOCK=/var/run/docker.sock
        # --max-time seconds for curl requests to Docker API
      - CURL_TIMEOUT=30
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
